# =========================================
# CONFIGURACIoN ESPECiFICA PARA DOCKER
# =========================================

# =========================================
# BASE DE DATOS - DOCKER
# =========================================
# Estas propiedades seran sobrescritas por las variables de entorno del docker-compose
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Configuracion optimizada para contenedores
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=180000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000

# =========================================
# JPA/HIBERNATE - DOCKER
# =========================================
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.show-sql=false

# =========================================
# LOGGING - DOCKER
# =========================================
logging.level.root=${LOGGING_LEVEL:INFO}
logging.level.com.linktic.products=${LOGGING_LEVEL:INFO}
logging.level.org.hibernate.SQL=WARN

# Log a archivo dentro del contenedor
logging.file.name=/app/logs/inventory-service.log
logging.logback.rollingpolicy.max-file-size=50MB
logging.logback.rollingpolicy.max-history=10

# =========================================
# MICROSERVICIOS - DOCKER
# =========================================
app.services.product.url=${PRODUCT_SERVICE_URL:http://product-service:8080/api/v1}

# =========================================
# ACTUATOR - DOCKER
# =========================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.server.port=8081

# =========================================
# CONFIGURACIoN DE RECURSOS
# =========================================
# Optimizacion para contenedores con recursos limitados
spring.jpa.properties.hibernate.jdbc.batch_size=10
server.tomcat.max-threads=50
server.tomcat.min-spare-threads=10

# =========================================
# TIMEOUTS Y CONEXIONES
# =========================================
server.connection-timeout=20s
server.tomcat.connection-timeout=20000
spring.mvc.async.request-timeout=30000

# =========================================
# CACHE - DOCKER
# =========================================
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=15m
